import{_ as d,p as c,i,k as l,g as h,r as m,b as k,E as v,x as R,v as x,u as L}from"./index-DTGUHq3f.js";const P={__name:"OAuthLoginPage",setup(_,{expose:g}){g();const n=c("axios"),e=c("info"),[o,r]=[i(),i()];l(()=>{const a=o.currentRoute.value.name;if(a==="구글로그인"){const t=o.currentRoute.value.query.code;u("/oauth2/google",{code:t})}else if(a==="카카오로그인"){const t=o.currentRoute.value.query.accessToken;u("/oauth2/kakao",{accessToken:t})}else if(a==="네이버로그인"){const t=o.currentRoute.value.hash.split("#access_token=")[1].split("&")[0];u("/oauth2/naver",{accessToken:t})}});const u=(a,t)=>{n.get(a,{params:t}).then(s=>{e.setLoginStatus(!0),e.setToken(s.data.token),n.get("/user").then(f=>{e.setInfo(f.data),e.setLoginStatus(!0)}).catch(()=>{e.clear()})}).catch(s=>{console.debug(" err : ",s),e.clear()}).finally(()=>{const s=sessionStorage.getItem("LoginBeforePage");s?r.push({path:s}):r.push({name:"메인"})})},p={axios:n,info:e,route:o,router:r,login:u,inject:c,ref:m,reactive:k,onBeforeMount:v,onMounted:l,watch:R,computed:x,get useRoute(){return L},get useRouter(){return i}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}};function T(_,g,n,e,o,r){return h(" 로그인 페이지 ")}const A=d(P,[["render",T],["__file","C:/Users/mw/pjts/frontend/editor/src/pages/member/OAuthLoginPage.vue"]]);export{A as default};
